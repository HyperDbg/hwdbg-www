"use strict";(self.webpackChunkhwdbg_website=self.webpackChunkhwdbg_website||[]).push([[75],{7410:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>t,default:()=>h,frontMatter:()=>a,metadata:()=>l,toc:()=>d});var i=s(4848),r=s(8453);const a={sidebar_position:9},t="Assignments",l={id:"script/dslang/assignments",title:"Assignments",description:"By using a simple lvalue register assignment, a hardware engineer is able to change the value of each pin (register).",source:"@site/docs/script/dslang/assignments.md",sourceDirName:"script/dslang",slug:"/script/dslang/assignments",permalink:"/docs/script/dslang/assignments",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/script/dslang/assignments.md",tags:[],version:"current",sidebarPosition:9,frontMatter:{sidebar_position:9},sidebar:"tutorialSidebar",previous:{title:"Functions",permalink:"/docs/script/dslang/functions"},next:{title:"Conditional Statements",permalink:"/docs/script/dslang/conditional-statements"}},o={},d=[{value:"Example 1",id:"example-1",level:3},{value:"Example 2",id:"example-2",level:3},{value:"Example 3",id:"example-3",level:3},{value:"Local Variables Assignment",id:"local-variables-assignment",level:2},{value:"Modify Memory",id:"modify-memory",level:2},{value:"Example",id:"example",level:3}];function c(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"assignments",children:"Assignments"}),"\n",(0,i.jsx)(n.p,{children:"By using a simple lvalue register assignment, a hardware engineer is able to change the value of each pin (register)."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"@register = expression;\n"})}),"\n",(0,i.jsx)(n.h3,{id:"example-1",children:"Example 1"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"@hw_port2 = 0x55;\n"})}),"\n",(0,i.jsx)(n.h3,{id:"example-2",children:"Example 2"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"@hw_port3 = @hw_port2;\n"})}),"\n",(0,i.jsx)(n.h3,{id:"example-3",children:"Example 3"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"if (@hw_pin4 == 0x1) {\r\n    @hw_port3 = @hw_port1 & @hw_pin1 + 12;\r\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"local-variables-assignment",children:"Local Variables Assignment"}),"\n",(0,i.jsxs)(n.p,{children:["In ",(0,i.jsx)(n.em,{children:"dslang"}),", all the variables are defined without ",(0,i.jsx)(n.strong,{children:"type"}),", and all of them are considered unsigned 64-bit integers. You can save the results of functions and boolean expressions or results of mathematical calculations alongside 64-bit addresses to the variables."]}),"\n",(0,i.jsxs)(n.p,{children:["The variables can be used as input to other functions or might be used in conditional statements. The following example shows the assigning ",(0,i.jsx)(n.strong,{children:"0"})," to a variable named ",(0,i.jsx)(n.code,{children:"my\\_variable"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"my_variable = 0;\n"})}),"\n",(0,i.jsx)(n.p,{children:"You can also assign registers (pins) or pseudo-registers (ports) to the variables."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"my_variable = @hw_port2 + 0x10;\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"my_variable = @hw_pin2 - @hw_pin12 + 8;\n"})}),"\n",(0,i.jsx)(n.p,{children:"Also, you can assign the results of functions to the variables."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"my_variable = my_function(@hw_port2);\n"})}),"\n",(0,i.jsx)(n.p,{children:"Or, you can decrement or increment variables by one."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"my_variable++;      // equals to my_variable = my_variable + 1;\r\nmy_variable--;      // equals to my_variable = my_variable - 1;\n"})}),"\n",(0,i.jsx)(n.h2,{id:"modify-memory",children:"Modify Memory"}),"\n",(0,i.jsxs)(n.p,{children:["Modifying memory (BRAM memory) is possible using '",(0,i.jsx)(n.strong,{children:"eb"}),", ",(0,i.jsx)(n.strong,{children:"ed"}),", ",(0,i.jsx)(n.strong,{children:"eq"}),"' functions."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"eb"}),": modifies a single ",(0,i.jsx)(n.strong,{children:"byte"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"ed"}),": modifies a ",(0,i.jsx)(n.strong,{children:"dwrod"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"eq"}),": modifies a ",(0,i.jsx)(n.strong,{children:"qword"})," value."]}),"\n",(0,i.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,i.jsxs)(n.p,{children:["The following code edits memory (quad-word) at 0x22 and change it to ",(0,i.jsx)(n.code,{children:"0x1234"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"IsEditApplied = eq(0x22, 0x1234);\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>l});var i=s(6540);const r={},a=i.createContext(r);function t(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);